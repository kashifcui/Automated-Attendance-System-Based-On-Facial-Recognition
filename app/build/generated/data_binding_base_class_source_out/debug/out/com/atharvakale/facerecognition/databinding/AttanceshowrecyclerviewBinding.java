// Generated by view binder compiler. Do not edit!
package com.atharvakale.facerecognition.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.atharvakale.facerecognition.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AttanceshowrecyclerviewBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView classAttand;

  @NonNull
  public final ImageView delecteBtn;

  @NonNull
  public final ImageView editBtn;

  @NonNull
  public final TextView nameView;

  @NonNull
  public final TextView rollNo;

  private AttanceshowrecyclerviewBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView classAttand, @NonNull ImageView delecteBtn, @NonNull ImageView editBtn,
      @NonNull TextView nameView, @NonNull TextView rollNo) {
    this.rootView = rootView;
    this.classAttand = classAttand;
    this.delecteBtn = delecteBtn;
    this.editBtn = editBtn;
    this.nameView = nameView;
    this.rollNo = rollNo;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AttanceshowrecyclerviewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AttanceshowrecyclerviewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.attanceshowrecyclerview, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AttanceshowrecyclerviewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.class_attand;
      TextView classAttand = ViewBindings.findChildViewById(rootView, id);
      if (classAttand == null) {
        break missingId;
      }

      id = R.id.delecte_btn;
      ImageView delecteBtn = ViewBindings.findChildViewById(rootView, id);
      if (delecteBtn == null) {
        break missingId;
      }

      id = R.id.edit_btn;
      ImageView editBtn = ViewBindings.findChildViewById(rootView, id);
      if (editBtn == null) {
        break missingId;
      }

      id = R.id.name_view;
      TextView nameView = ViewBindings.findChildViewById(rootView, id);
      if (nameView == null) {
        break missingId;
      }

      id = R.id.roll_no;
      TextView rollNo = ViewBindings.findChildViewById(rootView, id);
      if (rollNo == null) {
        break missingId;
      }

      return new AttanceshowrecyclerviewBinding((ConstraintLayout) rootView, classAttand,
          delecteBtn, editBtn, nameView, rollNo);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
