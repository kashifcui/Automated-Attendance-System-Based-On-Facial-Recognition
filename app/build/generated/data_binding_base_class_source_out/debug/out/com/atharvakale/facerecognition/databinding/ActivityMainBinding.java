// Generated by view binder compiler. Do not edit!
package com.atharvakale.facerecognition.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.camera.view.PreviewView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.atharvakale.facerecognition.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView btnCameraSwitch;

  @NonNull
  public final Button btnRecognize;

  @NonNull
  public final Button btnSaveAttandness;

  @NonNull
  public final FrameLayout container;

  @NonNull
  public final RecyclerView presentRecyclerView;

  @NonNull
  public final PreviewView previewView;

  @NonNull
  public final TextView textView;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView btnCameraSwitch, @NonNull Button btnRecognize,
      @NonNull Button btnSaveAttandness, @NonNull FrameLayout container,
      @NonNull RecyclerView presentRecyclerView, @NonNull PreviewView previewView,
      @NonNull TextView textView) {
    this.rootView = rootView;
    this.btnCameraSwitch = btnCameraSwitch;
    this.btnRecognize = btnRecognize;
    this.btnSaveAttandness = btnSaveAttandness;
    this.container = container;
    this.presentRecyclerView = presentRecyclerView;
    this.previewView = previewView;
    this.textView = textView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_camera_switch;
      ImageView btnCameraSwitch = ViewBindings.findChildViewById(rootView, id);
      if (btnCameraSwitch == null) {
        break missingId;
      }

      id = R.id.btn_recognize;
      Button btnRecognize = ViewBindings.findChildViewById(rootView, id);
      if (btnRecognize == null) {
        break missingId;
      }

      id = R.id.btn_save_attandness;
      Button btnSaveAttandness = ViewBindings.findChildViewById(rootView, id);
      if (btnSaveAttandness == null) {
        break missingId;
      }

      id = R.id.container;
      FrameLayout container = ViewBindings.findChildViewById(rootView, id);
      if (container == null) {
        break missingId;
      }

      id = R.id.presentRecyclerView;
      RecyclerView presentRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (presentRecyclerView == null) {
        break missingId;
      }

      id = R.id.previewView;
      PreviewView previewView = ViewBindings.findChildViewById(rootView, id);
      if (previewView == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, btnCameraSwitch, btnRecognize,
          btnSaveAttandness, container, presentRecyclerView, previewView, textView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
